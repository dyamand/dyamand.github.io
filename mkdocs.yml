site_name: DYAMAND

# Meta tags (placed in header)
site_description: 
#site_author: Your Name
#site_url: https://you.github.io/dyamand-integration

# Repository (add link to repository on each page)
#repo_name: dyamand-integration
#repo_url: http://github.com/you/dyamand-integration
#edit_uri: edit/master/src/doc/docs/

#Copyright (shown at the footer)
copyright: 'Copyright &copy; 2021 DYAMAND'

# Material theme
theme: 'material'
extra_css: 
  - extra.css
#extra:
# palette:
#    primary: 'indigo'
#    accent: 'indigo'

#  social:
#    - type: 'github'
#      link: 'https://github.com/you'
#    - type: 'twitter'
#      link: 'https://twitter.com/you'


# Google Analytics
#google_analytics:
#  - 'UA-111111111-1'
#  - 'auto'

# Extensions
markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - codehilite:
      guess_lang: false
  - footnotes
  - meta
  - toc:
      permalink: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.highlight:
      linenums: true
      linenums_style: pymdownx.inline
  - pymdownx.inlinehilite
  - pymdownx.magiclink
  - pymdownx.smartsymbols
  - pymdownx.snippets
  - pymdownx.superfences
  - pymdownx.tasklist:
      custom_checkbox: true
      clickable_checkbox: false

nav:
  - What is DYAMAND?: index.md
  - For end users: endusers.md
  - For application developers: applicationdevelopers.md
  - For core developers: coredevelopers.md
  - DYAMAND overview:
      - Generic model: dyamand/model.md
      - Plugins: dyamand/plugins.md
  - Writing an application:
      - Service lifecycle: applications/services.md
  - Add technology support:
      - Overview: plugins/overview.md
      - Adding new state and service prototypes: plugins/prototypes.md
      - Structure: plugins/structure.md
      - Discovering a new service: plugins/discovery.md
      - Describing a service: plugins/description.md
      - Detecting state changes: plugins/state_changes.md
      - Template for new technologies: technologies/template.md
  - Style guidelines:
      - Logging: styleguides/logging.md
  - Developer information:
      - GraphQL:
          - General: developer/graphql/general.md
          - Subscriptions: developer/graphql/subscriptions.md
          - Tests: developer/graphql/tests.md
      - 0. Tests for plugins: plugins/tests.md
      - 1. Discovering new services: developer/discovery.md
      - 2. Describing services: developer/description.md
      - 3. Detecting state changes: developer/state_changes.md
      - 4. Translating services and state changes: developer/translation.md
      - Internal functionality:
        - A. Task scheduling: developer/scheduling.md
        - B. Eventing: developer/eventing.md
        - C. Installation Monitoring: developer/installation_monitoring.md
        - D. Backend Communication: developer/backend_communication.md
        - F. Interception: developer/interception.md
        - G. Persistence: developer/persistence.md
        - H. Device Monitoring: developer/device_monitoring.md
        - I. Angular Services: developer/angular_services.md
        - J. Serialization: developer/serialization.md
        - K. Configuration: developer/configuration.md
        - L. Authorization: developer/authorization.md
        - M. Dashboard error visualization: developer/dashboard_error_visualization.md
        - N. Profiles: developer/profiles.md
  - Technologies:
    - Bluetooth: technologies/bluetooth.md
    - OCTA: technologies/octa.md
